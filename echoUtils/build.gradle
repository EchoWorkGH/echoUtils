plugins {
    id 'com.android.library'
    id 'kotlin-android'

}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    //DataBinding
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //添加多类型列表依赖 https://github.com/drakeet/MultiType
    api 'me.drakeet.multitype:multitype:2.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //SDK需要的依赖
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
}

//***************************** 打包发布 *****************************************
def gitCommitHash = 'git log  -1 --pretty="%H"'.execute([], project.rootDir).text.trim()
def gitLog = new String('git log  -1 --pretty="%s"'.execute([], project.rootDir).text.trim().replaceAll("\n", "").getBytes(), "utf-8")
def branch = new String('git branch --show-current'.execute([], project.rootDir).text.trim().replaceAll("\n", "").getBytes(), "utf-8")
def time = new Date().format("yyyy-MM-dd HH:mm:ss").toString()
def theVersionNameCode = '0.0.1'

apply plugin: 'maven'
///说明文档
def DESCRIPTION = '2021/8/5 转化部分kotlin'
def VERSION = theVersionNameCode + '-beta3'

uploadArchives {
    def GITHUB_REPO_PATH = "./"
    repositories {
        mavenDeployer {
            repository(url: "file://${file(GITHUB_REPO_PATH).absolutePath}")
            pom.project {
                groupId 'com.echo'
                artifactId 'utils'
                version VERSION
                packaging 'aar'
            }
            pom.withXml {
                asNode().appendNode('description', DESCRIPTION)
            }
            pom.withXml {
                asNode().appendNode('git-branch', branch)
            }
            pom.withXml {
                asNode().appendNode('git-gitCommitHash', gitCommitHash)
            }
            pom.withXml {
                asNode().appendNode('git-log', gitLog)
            }
            pom.withXml {
                asNode().appendNode('build-time', time)
            }
        }
    }
}
//  ./gradlew uploadArchives